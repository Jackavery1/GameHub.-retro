<div class="crt-container">
  <div class="crt-tv genesis-tv">
    <div class="crt-screen genesis-screen">
      <div class="crt-bezel">
        <canvas id="genesisScreen" width="320" height="224"></canvas>
        <div class="crt-scanlines genesis-scanlines"></div>
        <div class="crt-glow genesis-glow"></div>
      </div>
    </div>

    <div class="tv-controls">
      <div class="control-knob power-knob" data-action="power">‚èª</div>
      <div class="control-knob volume-knob" data-action="volume">üîä</div>
      <div class="control-knob channel-knob" data-action="reset">‚Ü∫</div>
    </div>
  </div>

  <div class="game-library genesis-library">
    <div class="library-header">üéÆ</div>
    <div class="game-grid">
      <!-- Jeux Sega Genesis Internet Archive -->
      <div
        class="game-cartridge genesis-cart"
        data-game="sonic"
        data-url="https://archive.org/embed/genesis_Sonic_the_Hedgehog_1991"
      >
        <div class="cart-label">
          <div class="cart-icon">üíô</div>
          <div class="cart-title">Sonic</div>
        </div>
      </div>

      <div
        class="game-cartridge genesis-cart"
        data-game="streets-of-rage"
        data-url="https://archive.org/embed/genesis_Streets_of_Rage_1991"
      >
        <div class="cart-label">
          <div class="cart-icon">üëä</div>
          <div class="cart-title">Streets</div>
        </div>
      </div>

      <div
        class="game-cartridge genesis-cart"
        data-game="golden-axe"
        data-url="https://archive.org/embed/genesis_Golden_Axe_1989"
      >
        <div class="cart-label">
          <div class="cart-icon">‚öîÔ∏è</div>
          <div class="cart-title">G.Axe</div>
        </div>
      </div>

      <div
        class="game-cartridge genesis-cart"
        data-game="altered-beast"
        data-url="https://archive.org/embed/genesis_Altered_Beast_1988"
      >
        <div class="cart-label">
          <div class="cart-icon">üê∫</div>
          <div class="cart-title">A.Beast</div>
        </div>
      </div>

      <div
        class="game-cartridge genesis-cart"
        data-game="phantasy-star"
        data-url="https://archive.org/embed/genesis_Phantasy_Star_IV_1993"
      >
        <div class="cart-label">
          <div class="cart-icon">‚≠ê</div>
          <div class="cart-title">P.Star</div>
        </div>
      </div>

      <div
        class="game-cartridge genesis-cart"
        data-game="shinobi"
        data-url="https://archive.org/embed/genesis_Shinobi_III_1993"
      >
        <div class="cart-label">
          <div class="cart-icon">ü•∑</div>
          <div class="cart-title">Shinobi</div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .crt-container {
    display: flex;
    gap: 40px;
    padding: 20px;
    min-height: 80vh;
    background: linear-gradient(135deg, #1e3c72, #2a5298);
  }

  .genesis-tv {
    background: linear-gradient(145deg, #34495e, #2c3e50);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4),
      inset 0 2px 4px rgba(255, 255, 255, 0.1);
  }

  .genesis-screen {
    background: #000;
    box-shadow: inset 0 0 30px rgba(0, 0, 0, 0.8),
      0 0 20px rgba(52, 152, 219, 0.4);
  }

  .genesis-glow {
    background: radial-gradient(
      circle at center,
      rgba(52, 152, 219, 0.2) 0%,
      transparent 70%
    );
  }

  #genesisScreen {
    width: 640px;
    height: 448px;
    image-rendering: pixelated;
    border-radius: 8px;
    background: linear-gradient(45deg, #1e3c72, #3498db);
    display: block;
  }

  .genesis-library {
    background: linear-gradient(145deg, #34495e, #2c3e50);
  }

  .genesis-cart {
    background: linear-gradient(145deg, #3498db, #2980b9);
  }

  .genesis-cart::before {
    background: linear-gradient(90deg, #3498db, #2980b9, #e74c3c, #f39c12);
  }

  .genesis-cart:hover {
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3), 0 0 20px rgba(52, 152, 219, 0.4);
  }

  .genesis-cart.active {
    background: linear-gradient(145deg, #e74c3c, #c0392b);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3), 0 0 30px rgba(52, 152, 219, 0.6);
  }

  .genesis-scanlines {
    background: repeating-linear-gradient(
      0deg,
      transparent,
      transparent 2px,
      rgba(52, 152, 219, 0.05) 2px,
      rgba(52, 152, 219, 0.05) 4px
    );
  }

  /* Styles communs r√©utilis√©s */
  .crt-tv {
    position: relative;
    border-radius: 20px;
    padding: 30px;
  }

  .crt-screen {
    position: relative;
    border-radius: 15px;
    padding: 20px;
  }

  .crt-bezel {
    position: relative;
    background: radial-gradient(circle at center, #111 0%, #000 100%);
    border-radius: 10px;
    overflow: hidden;
  }

  .crt-scanlines {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }

  .crt-glow {
    position: absolute;
    top: -10px;
    left: -10px;
    right: -10px;
    bottom: -10px;
    pointer-events: none;
    animation: crt-glow 3s ease-in-out infinite alternate;
  }

  @keyframes crt-glow {
    0% {
      opacity: 0.8;
    }
    100% {
      opacity: 1;
    }
  }

  .tv-controls {
    position: absolute;
    right: 20px;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    flex-direction: column;
    gap: 15px;
  }

  .control-knob {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: linear-gradient(145deg, #34495e, #2c3e50);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 16px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3),
      inset 0 2px 4px rgba(255, 255, 255, 0.1);
  }

  .control-knob:hover {
    transform: scale(1.1);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4),
      inset 0 2px 4px rgba(255, 255, 255, 0.2);
  }

  .control-knob:active {
    transform: scale(0.95);
  }

  .game-library {
    flex: 1;
    border-radius: 15px;
    padding: 20px;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3),
      inset 0 2px 4px rgba(255, 255, 255, 0.1);
  }

  .library-header {
    text-align: center;
    font-size: 2em;
    margin-bottom: 20px;
    color: var(--neon);
  }

  .game-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
    gap: 15px;
  }

  .game-cartridge {
    border-radius: 10px;
    padding: 15px;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2),
      inset 0 2px 4px rgba(255, 255, 255, 0.2);
  }

  .game-cartridge:hover {
    transform: translateY(-5px);
  }

  .game-cartridge:active {
    transform: translateY(-2px);
  }

  .game-cartridge::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
  }

  .cart-label {
    text-align: center;
    color: white;
  }

  .cart-icon {
    font-size: 2em;
    margin-bottom: 5px;
  }

  .cart-title {
    font-size: 0.9em;
    font-weight: bold;
  }

  .game-cartridge.active .cart-label {
    color: white;
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .crt-container {
      flex-direction: column;
      gap: 20px;
    }

    #genesisScreen {
      width: 100%;
      max-width: 640px;
      height: auto;
    }

    .tv-controls {
      position: static;
      flex-direction: row;
      justify-content: center;
      transform: none;
      margin-top: 20px;
    }
  }
</style>

<script>
  // Gestion des jeux Sega Genesis
  let currentGame = null;
  let gameFrame = null;

  // Initialisation
  document.addEventListener("DOMContentLoaded", () => {
    initializeEmulator();
    setupGameLibrary();
    setupControls();
  });

  function initializeEmulator() {
    const canvas = document.getElementById("genesisScreen");
    const ctx = canvas.getContext("2d");

    // Affichage de d√©marrage Genesis
    ctx.fillStyle = "#1e3c72";
    ctx.fillRect(0, 0, canvas.width, canvas.height);

    // Logo Sega Genesis stylis√©
    ctx.fillStyle = "#3498db";
    ctx.font = "bold 28px monospace";
    ctx.textAlign = "center";
    ctx.fillText("SEGA GENESIS", canvas.width / 2, canvas.height / 2 - 20);

    ctx.fillStyle = "#e74c3c";
    ctx.font = "16px monospace";
    ctx.fillText(
      "S√©lectionnez un jeu ‚Üí",
      canvas.width / 2,
      canvas.height / 2 + 20
    );

    // Effet de lignes Genesis
    drawGenesisLines(ctx);
  }

  function drawGenesisLines(ctx) {
    ctx.strokeStyle = "#3498db";
    ctx.lineWidth = 2;
    ctx.globalAlpha = 0.3;

    for (let i = 0; i < 10; i++) {
      ctx.beginPath();
      ctx.moveTo(0, i * 30);
      ctx.lineTo(canvas.width, i * 30 + 50);
      ctx.stroke();
    }

    ctx.globalAlpha = 1;
  }

  function setupGameLibrary() {
    const cartridges = document.querySelectorAll(".game-cartridge");

    cartridges.forEach((cartridge) => {
      cartridge.addEventListener("click", () => {
        const gameUrl = cartridge.dataset.url;
        const gameName = cartridge.dataset.game;

        loadGame(gameUrl, gameName);

        // Mise √† jour visuelle
        cartridges.forEach((c) => c.classList.remove("active"));
        cartridge.classList.add("active");
      });
    });
  }

  function setupControls() {
    const controls = document.querySelectorAll(".control-knob");

    controls.forEach((control) => {
      control.addEventListener("click", () => {
        const action = control.dataset.action;

        switch (action) {
          case "power":
            togglePower();
            break;
          case "volume":
            toggleVolume();
            break;
          case "reset":
            resetGame();
            break;
        }
      });
    });
  }

  function loadGame(gameUrl, gameName) {
    const canvas = document.getElementById("genesisScreen");
    const container = canvas.parentElement;

    // Supprimer l'ancien iframe s'il existe
    if (gameFrame) {
      gameFrame.remove();
    }

    // Cr√©er un nouveau iframe
    gameFrame = document.createElement("iframe");
    gameFrame.src = gameUrl;
    gameFrame.style.width = "100%";
    gameFrame.style.height = "100%";
    gameFrame.style.border = "none";
    gameFrame.style.borderRadius = "8px";
    gameFrame.style.position = "absolute";
    gameFrame.style.top = "0";
    gameFrame.style.left = "0";

    // Cacher le canvas et afficher l'iframe
    canvas.style.display = "none";
    container.style.position = "relative";
    container.appendChild(gameFrame);

    currentGame = gameName;

    // Effet de chargement
    showLoadingEffect();
  }

  function showLoadingEffect() {
    const scanlines = document.querySelector(".crt-scanlines");
    scanlines.style.animation = "loading-flicker 0.5s ease-in-out 3";
  }

  function togglePower() {
    const canvas = document.getElementById("genesisScreen");
    const container = canvas.parentElement;

    if (gameFrame) {
      gameFrame.remove();
      gameFrame = null;
      canvas.style.display = "block";
      initializeEmulator();

      // Retirer la s√©lection active
      document.querySelectorAll(".game-cartridge").forEach((c) => {
        c.classList.remove("active");
      });
    }
  }

  function toggleVolume() {
    // Simulation du contr√¥le du volume
    const volumeKnob = document.querySelector('[data-action="volume"]');
    volumeKnob.style.transform = "rotate(45deg)";

    setTimeout(() => {
      volumeKnob.style.transform = "";
    }, 200);
  }

  function resetGame() {
    if (currentGame && gameFrame) {
      gameFrame.src = gameFrame.src; // Recharger l'iframe
      showLoadingEffect();
    }
  }

  // Animation de chargement
  const style = document.createElement("style");
  style.textContent = `
  @keyframes loading-flicker {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
  }
`;
  document.head.appendChild(style);
</script>
